name: Deploy

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest
    env:
        working-directory: ./
        ENV: ${{ secrets.ENV }}
    steps:
    # 기본 체크아웃
    - name: Checkout
      uses: actions/checkout@v3
    # JDK 11 세팅
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
    # 환경 변수 설정
    - name: make env.properties
    - uses: actions/checkout@v3
    - run: |
        touch ./src/main/resources/env.properties |
        echo "${{env.ENV}}" > ./src/main/resources/env.properties
    - uses: actions/upload-artifact@v3
      with:
          name: env.properties
          path: ./src/main/resources/env.properties
    # Gradlew 실행 허용
    - name: Run chmod to make gradlew executable
      run: chmod +x ./gradlew
      working-directory: ${{ env.working-directory }}
    # Gradle build (Test 제외)
    - name: Build with Gradle
      working-directory: ${{ env.working-directory }}
      uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
      with:
        arguments: clean build -x test
    # Docker build
    - name: Docker build
      run: |
        docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
        docker build -t atties_spring .
        docker tag atties_spring choo000407/atties_spring:${GITHUB_SHA::7}
        docker push choo000407/atties_spring:${GITHUB_SHA::7}
    # Deploy
    - name: Deploy
      uses: appleboy/ssh-action@master
      with:
        host: ec2-44-193-163-114.compute-1.amazonaws.com
        username: ec2-user
        password: ${{ secrets.SSH_PASSWORD }}
        envs: GITHUB_SHA
        script: |
          docker pull choo000407/atties_spring:${GITHUB_SHA::7}
          docker tag choo000407/atties_spring:${GITHUB_SHA::7} atties_spring
          docker-compose up