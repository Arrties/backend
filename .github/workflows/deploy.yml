name: Deploy

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    # 환경 변수 설정
    - name: Set environment values
      working-directory: ./
      run: |
        echo email.AdminMail.id=${{ secrets.EMAIL_ADMINMAIL_ID }} >> env.properties |
        echo email.AdminMail.password=${{ EMAIL_ADMINMAIL_PASSWORD }} >> env.properties |
        echo application.spring.redis.port=${{ APPLICATION_SPRING_REDIS_PORT }} >> env.properties |
        echo application.spring.datasource.url=${{ APPLICATION_SPRING_DATASOURCE_URL }} >> env.properties |
        echo application.spring.datasource.username=${{ APPLICATION_SPRING_DATASOURCE_USERNAME }} >> env.properties |
        echo application.spring.datasource.password=${{ APPLICATION_SPRING_DATASOURCE_PASSWORD }} >> env.properties |
        echo application.spring.security.kakao.client-id=${{ APPLICATION_SPRING_SECURITY_KAKAO_CLIENT_ID }} >> env.properties |
        echo application.spring.security.kakao.client-secret=${{ APPLICATION_SPRING_SECURITY_KAKAO_CLIENT_SECRET }} >> env.properties |
        echo application.spring.security.naver.client-id=${{ APPLICATION_SPRING_SECURITY_NAVER_CLIENT_ID }} >> env.properties |
        echo application.spring.security.naver.client-secret=${{ APPLICATION_SPRING_SECURITY_NAVER_CLIENT_SECRET }} >> env.properties |
        echo application.jwt.secret=${{ APPLICATION_JWT_SECRET }} >> env.properties |
        echo application.jwt.secret_refresh=${{ APPLICATION_JWT_SECRET_REFRESH }} >> env.properties |
        echo application.spring.security.kakao.redirect-uri=${{ APPLICATION_SPRING_SECURITY_KAKAO_REDIRECT_URI }} >> env.properties |
        echo application.spring.security.naver.redirect-uri=${{ APPLICATION_SPRING_SECURITY_NAVER_REDIRECT_URI }} >> env.properties |
        echo aws.iamAccessKey=${{ AWS_IAMACCESSKEY }} >> env.properties |
        echo aws.iamSecretKey=${{ AWS_IAMSECRETKEY }} >> env.properties |
        echo aws.storage.url=${{ AWS_STORAGE_URL }} >> env.properties |
        echo aws.region.static=${{ AWS_REGION_STATIC }} >> env.properties |
        echo aws.stack.auto=${{ AWS_STACK_AUTO }} >> env.properties
    # 기본 체크아웃
    - name: Checkout
      uses: actions/checkout@v3
    # Gradlew 실행 허용
    - name: Run chmod to make gradlew executable
      run: chmod +x ./gradlew
    # JDK 11 세팅
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
    # Gradle build (Test 제외)
    - name: Build with Gradle
      uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
      with:
        arguments: clean build -x test
